[tool.poetry]
name = "dummy_package"
version = "0.1.0"
description = "Package that contains Python development defaults and examples"
authors = ["Sarah Burnside <sarahburnside787@gmail.com>"]
maintainers = ["Sarah Burnside <sarahburnside787@gmail.com>"]
readme = "README.md"
license = "LICENSE"
repository = "https://github.com/WangThunder1/python_dev_template"
homepage = "https://github.com/WangThunder1"
classifiers = [
        'Development Status :: 1',
        'Intended Audience :: Anyone',
        'Natural Language :: English',
        'Operating System :: Windows',
        'Programming Language :: Python :: 3',
        'Topic :: Communications',
    ]
include = ["dummy_package/config.toml"]

[tool.poetry.dependencies]
python = "^3.11"
loguru = "^0.7.2"
toml = "^0.10.2"
numpy = "^1.26.3"

[tool.poetry.group.dev.dependencies]
types-toml = "^0.10.8.7"
pytest = "^8.0.0"
pylint = "^3.0.3"
#mypy = "^1.8.0"
pytest-cov = "^4.1.0"
black = "^24.1.1"
isort = "^5.13.2"
#loguru-mypy = "^0.0.4"
pydocstyle = {extras = ["toml"], version = "^6.3.0"}

[tool.poetry.group.build.dependencies]
#pyinstaller = "^6.3.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ["py311"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.tox
  | \.venv
  | build
  | dist
  | docs
)/
'''

[tool.isort]
line_length=120
combine_as_imports = true
force_sort_within_sections = true
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
profile = "black"
known_local_folder = ["dummy_package", "tests"]
forced_separate = ["tests"]

[tool.coverage.report]
show_missing = true
fail_under = 51
omit = []

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-p no:cacheprovider --strict-markers -vv --cov=dummy_package --doctest-modules --junitxml=junit/test-results.xml --cov-report=xml"
python_files = ["*test_*.py"]
# filterwarnings = "error"
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[tool.pylint.format]
max-line-length = 120

[tool.pylint.master]
ignore-path=[]
jobs = 0
score = true
fail-under = 10
py-version = '3.11'
clear-cache-post-run = true
disable = ["locally-disabled","suppressed-message"]
enable = [
  "bad-inline-option",
  "consider-using-augmented-assign",
  "deprecated-pragma",
  "file-ignored",
  "prefer-typing-namedtuple",
  "raw-checker-failed",
  "use-implicit-booleaness-not-comparison-to-string",
  "use-implicit-booleaness-not-comparison-to-zero",
  "use-symbolic-message-instead",
  "useless-suppression",
  ]
  extension-pkg-whitelist=[]
  extension-pkg-allow-list=[]
  load-plugins = [
    "pylint.extensions.broad_try_clause",
    "pylint.extensions.code_style",
    "pylint.extensions.confusing_elif",
    "pylint.extensions.consider_ternary_expression",
    "pylint.extensions.bad_builtin",
#    "pylint.extensions.mccabe",
    "pylint.extensions.docstyle",
    "pylint.extensions.check_elif",
    "pylint.extensions.redefined_variable_type",
    "pylint.extensions.overlapping_exceptions",
    "pylint.extensions.docparams",
    "pylint.extensions.empty_comment",
    "pylint.extensions.set_membership",
    "pylint.extensions.typing",
#    "pylint.extensions.while_used"
]

[tool.pylint.messages_control]
disable=["missing-module-docstring"]
enable=["c-extension-no-member"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_incomplete_stub = true
warn_redundant_casts = true
warn_unused_configs = true
check_untyped_defs = true
disallow_any_unimported = true
disallow_untyped_defs = true
no_implicit_optional = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
warn_unreachable = true
show_error_codes = true
follow_imports = "silent"
namespace_packages = true
warn_unused_ignores = true
plugins = ["numpy.typing.mypy_plugin"]
strict = true
exclude = []

[tool.pydocstyle]
inherit = false
convention = "google"
add-ignore=["D100", "D104"]
match-dir="dummy_package"